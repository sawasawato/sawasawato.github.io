<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sawasawato Web Hack Blog]]></title>
  <link href="http://sawasawato.github.io/atom.xml" rel="self"/>
  <link href="http://sawasawato.github.io/"/>
  <updated>2014-08-22T23:16:39+09:00</updated>
  <id>http://sawasawato.github.io/</id>
  <author>
    <name><![CDATA[Sawasawato]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JavaScript 一番簡単なクロージャー 説明]]></title>
    <link href="http://sawasawato.github.io/blog/2014/08/22/js-losure/"/>
    <updated>2014-08-22T22:13:09+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/08/22/js-losure</id>
    <content type="html"><![CDATA[<h2>JSの曖昧なクロージャーとは</h2>

<!-- more -->


<p>Webデザイナー、コーダーの方などは「C言語」のような老舗プログラム言語をやらずに<br/>
JSが初めてのプログラム言語という方は、私も含めて少なくないと思う。<br/>
少し慣れてきたと思ったら、恐らく上司などに言われるであろう<br/>
「<strong>グローバル汚染がひどい</strong>」<br/>
それを回避する方法にクロージャーや、カプセル化があるけれど、なくても動いてしまうから、結構あいまいにしがち。<br/>
でも知らずにいると、痛い目に合いそうなこと必須なので、ちょっと調べてみた。</p>

<hr />

<h2>クロージャーとは</h2>

<p><strong>引数以外の値を関数に対して設定するプログラミング手法。</strong><br/>
  == 変数の利用する範囲をコントロールする<br/>
何となく現場だと、クロージャーという言葉が出る時は変数スコープに問題がある時が多いので、今回はその対処法を記載するということで。<br/>
でも本当は上記の意味らしい。細かいのはお偉いさんのサイトでご確認を</p>

<hr />

<h2>即時関数</h2>

<p>ちゃっちゃとどうすればグローバル汚染を防げるのか説明</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(function(window, document, $) {
</span><span class='line'>    var GlobalPollution = 'グローバル汚染ここの範囲に書いちゃいかん';
</span><span class='line'>    var FuncSamp = (function() {
</span><span class='line'>        var GlobalModoki = 0; //初期化のように一回だけ呼びたいものを記述
</span><span class='line'>        
</span><span class='line'>        return function(target,e) {
</span><span class='line'>            var NandomoYobarel = 0; //イベント毎に初期化したいものを記述
</span><span class='line'>            e.preventDefault;
</span><span class='line'>            GlobalModoki ++;
</span><span class='line'>            NandomoYobarel ++;
</span><span class='line'>            console.log(GlobalModoki); // 1,2,3
</span><span class='line'>            console.log(NandomoYobarel); // 1
</span><span class='line'>            console.log(target); //Dom取得 (this)
</span><span class='line'>            console.log(GlobalPollution);//グローバル汚染
</span><span class='line'>        };
</span><span class='line'>    })();
</span><span class='line'>    
</span><span class='line'>    $('#wrap').on('click','.buton', function(event) {
</span><span class='line'>        FuncSamp($(this), event);
</span><span class='line'>    });
</span><span class='line'>    
</span><span class='line'>})(window, document, jQuery);</span></code></pre></td></tr></table></div></figure>


<p>はじめのうちは、大抵イベント呼び出し時に定数のしたいものを初期化してしまって
外に出してたら気づかずグローバル汚染してた。ということが多い。&hellip;と思う。</p>

<ul>
<li>むやみに GlobalPollution の位置に変数を書いちゃいかん</li>
<li>var FunkSamp = (function() { &hellip; のようにリテラル無名関数を宣言すると、中の変数はローカル変数として扱われて、外に出されず汚染されない。定数扱いしたいものは、ここに記述。</li>
<li>retun function() { &hellip;関数オブジェクトを、無名関数の戻り値とすることで、無名関数が実行された後、実体をもつ関数になる。&hellip;つまり処理内容をここに書けと</li>
<li>クロージャーを使うと、引数にとらわれずに色々できる。</li>
<li>でも汎用性を上げるために引数を渡したいとおもうはず。そんな時はこんな書き方をしよう。</li>
</ul>


<p>なんとなく、クロージャーというより、スコープの話し。<br/>
でもいいよね。つられてもいいよね。</p>

<hr />

<h2>参考サイト</h2>

<ul>
<li><a href="https://developer.mozilla.org/ja/docs/Web/JavaScript/Guide/Closures">https://developer.mozilla.org/ja/docs/Web/JavaScript/Guide/Closures</a></li>
<li><a href="http://dqn.sakusakutto.jp/2009/01/javascript_5.html">http://dqn.sakusakutto.jp/2009/01/javascript_5.html</a></li>
<li><a href="http://qiita.com/takeharu/items/4975031faf6f7baf077a">http://qiita.com/takeharu/items/4975031faf6f7baf077a</a></li>
<li><a href="http://tacamy.hatenablog.com/entry/2012/12/31/005951">http://tacamy.hatenablog.com/entry/2012/12/31/005951</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac初心者オススメ<br />ターミナルで使う 厳選UNIXコマンド]]></title>
    <link href="http://sawasawato.github.io/blog/2014/08/21/unix-command/"/>
    <updated>2014-08-21T21:20:22+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/08/21/unix-command</id>
    <content type="html"><![CDATA[<h2>Macはデフォルトで強力</h2>

<!-- more -->


<p>GUIが魅力のMac でもそれだけでなく、CUIもかなり強力。<br/>
Winのコマンドプロンプトなどは、デフォルトだと貧弱すぎるのでカスタマイズしたり。<br/>
CygWin 入れたり、それでもクセがあって使いにくい。<br/>
MacはUNIXベースな上、デフォルトが良い感じなので、初心者でも是非使うべき。<br/>
スタバなどで、ターミナルを立ち上げて、できる大人を演出しよう</p>

<h3>基本構文</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>コマンド
</span><span class='line'>コマンド + オプション
</span><span class='line'>コマンド + 引数
</span><span class='line'>コマンド + オプション + 引数</span></code></pre></td></tr></table></div></figure>


<p>半角スペースを間に入れる
「オプション + 引数」 の場合 オプションが先
return (enter) 実行</p>

<hr />

<h2>作業(カレント)ディレクトリ表示</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pwd
</span><span class='line'>  /usr/</span></code></pre></td></tr></table></div></figure>


<p>pwd == (print working directory)</p>

<hr />

<h2>作業(カレント)ディレクトリ変更</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd samp_directory
</span><span class='line'>  /usr/samp_directory
</span><span class='line'>
</span><span class='line'>cd /usr/samp_directory/
</span><span class='line'>  /usr/samp_directory
</span><span class='line'>
</span><span class='line'>cd ../
</span><span class='line'>  /usr/</span></code></pre></td></tr></table></div></figure>


<p>cd == (change directory)
引数に「絶対パス」 「相対パス」を入力する<br/>
./  カレントディレクトリ 現在いる階層<br/>
../ ペアレントディレクトリ 一つ上の階層 何個でも書ける</p>

<h3>タブ補完</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd sa &lt;Tab&gt;
</span><span class='line'>cd samp_directory  //と勝手に入力してくれる</span></code></pre></td></tr></table></div></figure>


<p>毎回パスを手打ちするのは面倒なので指定するディレクトリやファイル名の途中で
タブボタンを押すと勝手に入力してくれる。 &hellip;便利</p>

<hr />

<h2>ファイルの一覧表示</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls
</span><span class='line'>ls -a //隠しファイル、ディレクトリ表示
</span><span class='line'>ls -i //ファイルの詳細を表示
</span><span class='line'>ls -F //ファイルタイプを表す記号を付けて表示
</span><span class='line'>ls -R //サブディレクトリの中身も表示</span></code></pre></td></tr></table></div></figure>


<p>ls == (list segments)
良く使うオプションのみ紹介、他にもあるけど割愛。必要に応じて<br/>
オプション複数指定できる</p>

<hr />

<h2>ディレクトリを作成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir samp_directory
</span><span class='line'>mkdir -pv samp_directory //結果も返す
</span><span class='line'>mkdir -m samp_directory //パーミッションも合わせて設定する</span></code></pre></td></tr></table></div></figure>


<p>mkdir == (make directory)</p>

<hr />

<h2>ファイルを削除</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rm samp_directory
</span><span class='line'>rm -r //指定したディレクトリを中身ごと削除
</span><span class='line'>rm -f //警告、エラーを発生させずに対象を削除
</span><span class='line'>rm -i //削除するかを（ユーザに）確認しながら削除
</span><span class='line'>rm -v //削除後、内容を表示
</span></code></pre></td></tr></table></div></figure>


<p> rm == (remove)
 rmdir も削除コマンドとしてあるけど、中身があると削除できないので使えない。&mdash;
 rm -r はかなり使うので覚えよう。</p>

<hr />

<h2>ファイル(ディレクトリ)を検索</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find [検索対象ディレクトリパス] -name filename
</span><span class='line'>find -name "*.html" -ls</span></code></pre></td></tr></table></div></figure>


<p>ワイルドカードなどのメタ文字を使用する時は &ldquo;ダブルクォーテーションで囲む&rdquo;</p>

<hr />

<h2>テキストファイルから、任意の文字を検索 (正規表現に一致)</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grep [option][pattern][file1]
</span><span class='line'>grep samp *.html
</span><span class='line'>grep -n samp *.html //検索で見つかった行番号を表示
</span><span class='line'>grep -r samp *.html //カレントディレクトリ以下のディレクトリの中身も検索
</span><span class='line'>grep -R samp *.html //カレントディレクトリ以下のディレクトリの中身も検索</span></code></pre></td></tr></table></div></figure>


<p>find と組み合わせた検索方法は必須なので、覚えること</p>

<hr />

<h2>ファイルやディレクトリの複製をつくる</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp [option] Source Target
</span><span class='line'>cp -i samp.txt samp_directory/samp.txt
</span><span class='line'>cp -f コピー先に同名ファイルがあった時、確認せずに上書きする
</span><span class='line'>cr -i コピー先に同名ファイルがあった時、上書きするか確認する
</span><span class='line'>cp -r //ディレクトリを複製する時に使用
</span></code></pre></td></tr></table></div></figure>


<p> cp == (copy)
Sourceがコピー元で、Targetがコピー先
GUIのが楽で早いのであまり使わない
コピー時に別の名前でもコピーできる</p>

<hr />

<h2>ファイルやディレクトリを移動、名前変更</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mv [option] Source Target
</span><span class='line'>mv [option] Source Path
</span><span class='line'>mv -f 移動先に同名ファイルがあった時、確認せずに上書きする
</span><span class='line'>mv -i 移動先に同名ファイルがあった時、上書きするか確認する
</span></code></pre></td></tr></table></div></figure>


<p> mv== (move files)</p>

<hr />

<h2>入力したコマンドの履歴を確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>history
</span><span class='line'>↑
</span><span class='line'>↓</span></code></pre></td></tr></table></div></figure>


<p>十字キー 上 下 で履歴を追うこともできる。割と便利</p>

<hr />

<h2>ターミナルに表示された内容を消去する</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>clear</span></code></pre></td></tr></table></div></figure>


<p>ログが溜まって確認の効率が落ちた時など便利</p>

<hr />

<h2>コマンドの細かな使い方を確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>man [command]
</span><span class='line'>help [command]</span></code></pre></td></tr></table></div></figure>


<p> man == (manual)
マニュアルが読めたら</p>

<hr />

<h2>参考サイト</h2>

<ul>
<li><a href="http://dotinstall.com/lessons/basic_unix">http://dotinstall.com/lessons/basic_unix</a></li>
<li><a href="http://webya.in/archives/3676">http://webya.in/archives/3676</a></li>
<li><a href="http://macwiki.sourceforge.jp/wiki/index.php/UNIX%E3%81%AE%E5%9F%BA%E6%9C%AC%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89">http://macwiki.sourceforge.jp/wiki/index.php/UNIX%E3%81%AE%E5%9F%BA%E6%9C%AC%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89</a></li>
<li><a href="http://news.mynavi.jp/column/wc/013/">http://news.mynavi.jp/column/wc/013/</a>
1</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git 差分ファイル抽出]]></title>
    <link href="http://sawasawato.github.io/blog/2014/08/20/git-diff/"/>
    <updated>2014-08-20T14:17:10+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/08/20/git-diff</id>
    <content type="html"><![CDATA[<h2>git で差分ファイルを抽出する方法</h2>

<!-- more -->


<p>クライアントに納品する時に、差分で欲しいと良く言われる。<br/>
誤上書きのリスクを避けられるのと、バグが出た時に原因を追いやすくするため。<br/>
gitを利用するだけで、差分用のディレクトリを手動で作成したり、タイムスタンプで確認など不毛な作業から解放される。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git archive --format=zip --prefix=root/ HEAD `git diff --name-only HEAD HEAD^` -o sample.zip
</span><span class='line'>git archive --format=zip --prefix=root/ HEAD `git diff --name-only HEAD HEAD~1` -o sample.zip
</span><span class='line'>git archive HEAD `git diff --name-only HEAD HEAD~1` -o sample.zip
</span><span class='line'>git archive 3b4a6ca `git diff --name-only 3b4a6ca ea155fc ` -o sample.zip</span></code></pre></td></tr></table></div></figure>


<hr />

<h3>git archive 説明</h3>

<p>[ <strong>git archive</strong> ] アーカイブを作るコマンド</p>

<ul>
<li>&mdash;format == 圧縮形式の指定</li>
<li>&mdash;prefix == 保存先のディレクトリ指定 ないとカレントディレクトリに保存される&mdash;prefix=root/でrootディレクトリに入れてくれる。</li>
<li>-o == 出力先とファイル名指定</li>
</ul>


<hr />

<h3>git diff 説明</h3>

<p>[ <strong>git diff</strong> ] 変更された箇所を表示するコマンド
&mdash;name-only == ファイルパスを返してくれる</p>

<hr />

<h4>特定のリビジョンのアーカイブを作成</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git archive HEAD -o sample.zip
</span><span class='line'>git archive d4bb5fa -o sample.zip //ID7桁入力</span></code></pre></td></tr></table></div></figure>


<p>-o オプションをつけないと、文字化けの文字列がターミナル上に表示され続けてクラッシュする。<br/>
前の時のが、効果がよかったから、丸々戻してくれと言われた時に便利</p>

<hr />

<h3>特定のファイル、ディレクトリをアーカイブする</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git archive HEAD Gruntfile.js -o sample.zip
</span><span class='line'>git archive d4bb5fa Gruntfile.js -o sample.zip //ID7桁入力</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>参考サイト</h2>

<ul>
<li><a href="http://qiita.com/kaminaly/items/28f9cb4e680deb700833">http://qiita.com/kaminaly/items/28f9cb4e680deb700833</a></li>
<li><a href="http://transitive.info/article/git/command/archive/">http://transitive.info/article/git/command/archive/</a></li>
<li><a href="http://transitive.info/article/git/command/diff/">http://transitive.info/article/git/command/diff/</a></li>
<li><a href="http://git-scm.com/docs/git-archive">http://git-scm.com/docs/git-archive</a></li>
<li><a href="http://atskimura.hatenablog.com/entry/2014/02/19/105542">http://atskimura.hatenablog.com/entry/2014/02/19/105542</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mac ショートカットコマンド]]></title>
    <link href="http://sawasawato.github.io/blog/2014/08/08/mac/"/>
    <updated>2014-08-08T20:54:42+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/08/08/mac</id>
    <content type="html"><![CDATA[<!--more-->


<h2>Mac おすすめコマンド</h2>

<p>Windows から本格的に mac に切り替える時に
もとWinユーザーnoあるあるをまとめる</p>

<h2>mac ショートカットコマンド7選</h2>

<p>ターミナルを開く
ファインダーを開く</p>

<h2>参考サイト</h2>

<p><a href="http://inforati.jp/apple/mac-tips-techniques/system-hints/how-to-operate-folder-with-mac-finder-keyboard-shortcut.html">http://inforati.jp/apple/mac-tips-techniques/system-hints/how-to-operate-folder-with-mac-finder-keyboard-shortcut.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vpn とは？軽く調べる]]></title>
    <link href="http://sawasawato.github.io/blog/2014/08/08/vpn/"/>
    <updated>2014-08-08T17:38:42+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/08/08/vpn</id>
    <content type="html"><![CDATA[<h2>再度調べてみた</h2>

<!-- more -->


<p>社内のルーターを変更した関係で、VPNの接続方法が変わったので、再度、調査 + 設定</p>

<h2>VPN とは？ (Virtual Private Network) 仮想プライベートネットワーク</h2>

<blockquote><p>VPNはインターネットや多人数が利用する閉域網を介して、暗号化やトラフィック制御技術によりサイト間があたかもプライベート接続されているかのような状況を実現するものである。 &hellip;wiki</p></blockquote>

<h3>荷物 を運ぶイメージをするとわかりやすい。</h3>

<ul>
<li>インターネット == 一般道路をつかってそのまま手渡しのイメージ。</li>
<li>VPN == 一般道路の中に、専用道路をつくり、なおかつ荷物が特定されない工夫までしているイメージ。</li>
<li>専用通信回線 == 専用地下鉄級 外部からはほぼ入れない</li>
</ul>


<p>現実でも、一般道路は、誰もがどこからでも入ることができるため、盗みを企む人と接触するリスクが増える。<br/>
専用通信回線は安全、安定だが、その分コストがかかる。</p>

<h2>vpn メリット</h2>

<ul>
<li>外出先から、安全にインターネットを経由して社内にアクセスできる。</li>
<li>特定の相手に安全に情報を提供できる。</li>
<li>利用するアプリを意識しないで良いため、便利</li>
<li>コストが安い</li>
</ul>


<h2>vpn デメリット</h2>

<ul>
<li>ファイアウォールと衝突を起こす時もあり、利便性が下がる</li>
<li>通信速度などネット依存なので、時と場合でパフォーマンスが不安定</li>
</ul>


<hr />

<h2>vpnセットアップ参考サイト</h2>

<h3>・Mac系</h3>

<p><a href="http://ja.softether.org/4-docs/2-howto/L2TP%2F%2FIPsec_Setup_Guide_for_SoftEther_VPN_Server/5.Mac_OS_X_L2TP_Client_Setup">http://ja.softether.org/4-docs/2-howto/L2TP%2F%2FIPsec_Setup_Guide_for_SoftEther_VPN_Server/5.Mac_OS_X_L2TP_Client_Setup</a></p>

<h3>・Windows系</h3>

<p><a href="http://www.seil.jp/support/tech/doc/users-guide/pppac-client/win7_l2tp.html">http://www.seil.jp/support/tech/doc/users-guide/pppac-client/win7_l2tp.html</a></p>

<h3>・iPhone系</h3>

<p><a href="https://ja.softether.org/4-docs/2-howto/L2TP%2F%2FIPsec_Setup_Guide_for_SoftEther_VPN_Server/2.iPhone_iPad_L2TP_Client_Setting">https://ja.softether.org/4-docs/2-howto/L2TP%2F%2FIPsec_Setup_Guide_for_SoftEther_VPN_Server/2.iPhone_iPad_L2TP_Client_Setting</a></p>

<h3>・Android系</h3>

<p><a href="http://www.asiavpn.net/androidl2tp">http://www.asiavpn.net/androidl2tp</a></p>

<hr />

<h2>トラブル</h2>

<h3>繋がらない？</h3>

<p>とりあえず、再起動。<br/>
電源 OFF 時に前回の不要セッションが溜まったままだと、悪さをするそう。<br/>
セッションを初期化すると正常にVPN接続できるようになった。</p>

<h3>・エラーが表示された</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>＞Forbidden
</span><span class='line'>＞You don't have permission to access /ababa/sample/sawaAPI on this server.</span></code></pre></td></tr></table></div></figure>


<h3>※Mac</h3>

<p>VPNの詳細設定画面で以下をチェック
「すべてのトラフィックをVPN接続経由で送信」</p>

<h3>※Windows</h3>

<p>VPNの詳細設定画面で以下をチェック
「リモートネットワークでデフォルトゲートウェイを使う」</p>

<hr />

<h2>参考サイト</h2>

<p><a href="http://www.atmarkit.co.jp/fsecurity/special/22fivemin/fivemin00.html">http://www.atmarkit.co.jp/fsecurity/special/22fivemin/fivemin00.html</a>
<a href="http://ja.wikipedia.org/wiki/Virtual_Private_Network">http://ja.wikipedia.org/wiki/Virtual_Private_Network</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gitの基本]]></title>
    <link href="http://sawasawato.github.io/blog/2014/07/17/git/"/>
    <updated>2014-07-17T19:02:20+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/07/17/git</id>
    <content type="html"><![CDATA[<!-- more-->


<p>ソースツリーの登場によって、最近gitをターミナルで叩くことがかなり減った。
思い出せないことが増えたので、よく使うコマンドをメモ。</p>

<h2>必須情報を登録</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --global user.name "sawasawato"
</span><span class='line'>git config --global user.email "samp@samp.com"
</span><span class='line'>git config --global color.ul true //必須ではないけどカラースキームは設定した方が良い</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>git 設定を見直す</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config -l
</span><span class='line'>git config --list</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>help を引く</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git sample --help
</span><span class='line'>git help sample</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>作業ディレクトリ ファイル作成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /samp/
</span><span class='line'>mkdir project //ディレクトリ作成
</span><span class='line'>vim index.html //ファイル作成 修整 保存</span></code></pre></td></tr></table></div></figure>


<p>guiでフォルダとファイルを作っても、もちろん良い</p>

<hr />

<h2>git ローカルリポジトリを作成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git init</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>ステージングにアップ / インデックスに登録</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add index.html
</span><span class='line'>git add . //カレントディレクトリ以内登録</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>ローカルリポジトリにアップ</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git commit
</span><span class='line'>git commit -m "memoMessage" //コミット内容を表記</span></code></pre></td></tr></table></div></figure>


<p>テキストエディタが開くので、作業内容などを入力する</p>

<hr />

<h2>ログを見る</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git log
</span><span class='line'>git log --oneline //ログをコンパクトに見る
</span><span class='line'>git log -p //変更された場所を表示
</span><span class='line'>git log --stat //どのファイルが何箇所、変更があったのか表示</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>現在の状況を把握する 重要</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git status</span></code></pre></td></tr></table></div></figure>


<p>Changes not staged for commit:<br/>
  addもcommitもされていないなど表記される</p>

<hr />

<h2>間違えたファイルを元に戻す</h2>

<p>add してステージングにあがっていないもののみ</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout -- index.html
</span><span class='line'>git checkout -- .</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>差分を確認する &mdash; ステージングの前</h2>

<p>add してステージングにあがっていないもの</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git diff</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>差分を確認する &mdash; ステージングの後</h2>

<p>add してステージングにあげてしまったもの</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git diff --cached</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>コミットしたファイルを削除する方法</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git rm index.html</span></code></pre></td></tr></table></div></figure>


<p>commitして、gitの管理化においたファイルはgitコマンドで削除、移動しないとバグになる。
SVNも同じ。エクスプローラー や macの操作画面でファイルなど削除、移動しないように。</p>

<hr />

<h2>git 管理化に含めない方法</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vim .gitignore
</span><span class='line'>
</span><span class='line'>*.log //など記述する
</span><span class='line'>
</span><span class='line'>ls - la //で .ignore 確認できれば OK</span></code></pre></td></tr></table></div></figure>


<p>.gitignore がある階層から下のものを除外する
gui で作成してももちろん良い。</p>

<hr />

<h2>直前のコミットを上書き変更する</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vim index.html
</span><span class='line'>git add .
</span><span class='line'>git commit --amend</span></code></pre></td></tr></table></div></figure>


<p>直前のコミットメッセージだけ変えたいときも有効<br/>
ファイルを変更していなくても大丈夫</p>

<hr />

<h2>過去のバージョンに戻る</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git reset --hard HEAD //作業したファイルを破棄して、最後にコミットした時にリセットする
</span><span class='line'>git reset --hard HEAD^ //二つ前に戻る
</span><span class='line'>git reset --hard 445a3e8 //指定のバージョンに戻る 最低7桁</span></code></pre></td></tr></table></div></figure>


<p>HEAD === 一つ前のバージョン というか 作業する前の状態<br/>
commit ID 445a3e80acc7d7135009e995dd9112d247f0151d<br/>
など入力しても大丈夫 一つより前に戻る時は ID 入力</p>

<hr />

<h2>前のコミットに戻したけどやっぱり、進んだコミットにしたい</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git reset --hard ORIG_HEAD</span></code></pre></td></tr></table></div></figure>


<p>2回リセットした場合はダメ</p>

<hr />

<h2>ブランチを確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git branch</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>ブランチを作成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git branch sample</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>ブランチを移動</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout sample</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>ブランチを削除</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git branch -d sample</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>ブランチを作成してそのまま移動</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout -b sample</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>ブランチをマージする / 内容を取り込む</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout sample //他の変更を取り込むメインブランチに移動
</span><span class='line'>git marge sample2 //サブブランチから取り込む</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>コンフリクトの解決</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://dotinstall.com/lessons/basic_git/6716</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>タグを確認する</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git tag</span></code></pre></td></tr></table></div></figure>


<p>タグとは 分かりにくいコミットID を分かりやすい別の名前を付ける<br/>
リリースバージョン 1.0 のように</p>

<hr />

<h2>直近のコミットに対してタグを付ける</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git tag v1.0</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>タグを使ってコミットの内容を示す</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git show v1.0</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>後からタグを付けたい</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git tag samp コミットID(7桁以上)</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>タグを削除する</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git tag -d v1.0</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>エイリアス(ショートカット)を使う</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --global alias.co checkout
</span><span class='line'>git config --global alias.st status
</span><span class='line'>git config --global alias.br branch
</span><span class='line'>git config --global alias.ci commit</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>共有リポジトリの作成</h2>

<p>管理ファイルだけが管理されるようになる設定</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git init --bare</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>共有(別の)リポジトリを登録する</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote add origin (repos location)
</span><span class='line'>
</span><span class='line'>git remote add origin ~/.ourweb.git</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>共有リポジトリ登録を削除する</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote rm orign</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>共有リポジトリに push</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git push origin master</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>リモートリポジトリをコピーする</h2>

<p>予めディレクトリを作成する必要はない</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone ~/共有リポジトリパス newdirectory</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>別の人が編集したファイルを取り込む</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git pull origin master</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>\dスイッチを使う</h2>

<p>どこからでも別ディレクトリに移動できるこれは便利</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd \d D:</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Dドライブに移動する</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>D:</span></code></pre></td></tr></table></div></figure>


<hr />

<h3>参考サイト</h3>

<p><a href="http://dotinstall.com/lessons/basic_git/">http://dotinstall.com/lessons/basic_git/</a> <br/>
<a href="http://www.backlog.jp/git-guide/">http://www.backlog.jp/git-guide/</a> <br/>
<a href="https://www.atlassian.com/ja/git/tutorial/git-basics#!overview">https://www.atlassian.com/ja/git/tutorial/git-basics#!overview</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初めての Grunt 導入方法]]></title>
    <link href="http://sawasawato.github.io/blog/2014/07/11/grunt/"/>
    <updated>2014-07-11T21:26:46+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/07/11/grunt</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Grunt 概要</h2>

<ul>
<li>・Node.jsを使用したCUIのビルドツール(黒い画面)</li>
<li>・sass や coffee のコンパイル等毎回する作業を自動でやってくれる</li>
<li>・ローカルサーバーとかも立ち上げてくれる</li>
<li>・JavaScript で自動化するタスクを設定する</li>
</ul>


<p>コジカさんがわかりやすいです。<br/>
<a href="http://kojika17.com/2013/03/grunt.js-memo.html">http://kojika17.com/2013/03/grunt.js-memo.html</a></p>

<h2>gitの準備</h2>

<p>まずgitを使えるようにしておくこと。</p>

<h2>Node.jsの準備</h2>

<p>Node.js を nvm (Node Version Manager)でバージョン管理できる形で導入する。
バージョンによって、使えないプラグインがある + バージョン変更が面倒なので入れたほうが良い。
npmはnvmを入れれば勝手に入ってくる</p>

<p>nvm Node.jsのバージョン管理 コマンドでバージョン変更できる
npm Node.jsで使用するモジュール管理 コマンドでインストールアンインストールできる</p>

<p>導入が終わったら、Grunt導入</p>

<h2>Gruntのインストール</h2>

<h3>Gruntを動かすコマンドのインストール</h3>

<p>コマンドプロンプトか、ターミナルを立ち上げて以下を入力</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvmw use v0.10.26 //使用するバージョン選択
</span><span class='line'>npm install -g grunt-cli //どこでも使えるように -g パラメータを付ける</span></code></pre></td></tr></table></div></figure>


<p>grunt-cli は gruntを実行するためのコマンドリストの意味
たからgruntをいれてもこれを入れないと動かない</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grunt -version
</span><span class='line'>grunt-cli v0.1.13</span></code></pre></td></tr></table></div></figure>


<p>とか出ていれば OK</p>

<h3>Gruntを使ってみる</h3>

<p>1 作業ディレクトリを作成して、移動する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir samplepath/gruntsample
</span><span class='line'>cd samplepath/gruntsample</span></code></pre></td></tr></table></div></figure>


<p>GUIで作って移動するでも、もちろん良い。</p>

<p>2 設定ファイル「package.json」ファイル作成</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm init //対話が終わると package.json が生成される</span></code></pre></td></tr></table></div></figure>


<p>ウィザードが色々聞いてくれるのでそれに応えて設定ファイルを作成</p>

<pre><code>package.jsonとは？
Node.jsが依存ライブラリなどの環境情報を管理するための設定ファイル
</code></pre>

<p>3 gruntモジュールインストール
プロジェクト毎にバージョンが違うこともあるので、gruntモジュールは個別にインストール</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install grunt --save-dev</span></code></pre></td></tr></table></div></figure>


<p>save-devオプションを付けると、package.json の
「devDependencies」プロパティに
モジュール名:バージョン
を自動追記してくれる</p>

<p>4 Gruntfile.jsファイルの作成
package.jsonと同じ階層に Gruntfile.js を作成
以下の内容を記述して、Gruntのタスクの設定する</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module.exports = function(grunt) {
</span><span class='line'>  //Gruntの設定
</span><span class='line'>  grunt.initConfig({
</span><span class='line'>    pkg: grunt.file.readJSON('package.json')
</span><span class='line'>  });
</span><span class='line'>  //defaultタスクの定義
</span><span class='line'>  grunt.registerTask('default', 'Log some stuff.', function() {
</span><span class='line'>    //ログメッセージの出力
</span><span class='line'>    grunt.log.write('Logging some stuff...').ok();
</span><span class='line'>  });
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p>コマンドラインで以下を入力してタスクを実行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grunt</span></code></pre></td></tr></table></div></figure>


<p>gruntのみで動くのはderaultタスクが実行される
実行コマンドと走らせるタスクはもちろん自分で設定できる。</p>

<h2>参考サイト</h2>

<p><a href="http://www.atmarkit.co.jp/ait/articles/1403/04/news020.html">http://www.atmarkit.co.jp/ait/articles/1403/04/news020.html</a>
<a href="http://kojika17.com/2013/03/grunt.js-memo.html">http://kojika17.com/2013/03/grunt.js-memo.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SourceTree(ソースツリー) 差分ファイル 作成 Win mac]]></title>
    <link href="http://sawasawato.github.io/blog/2014/07/11/sorcetree/"/>
    <updated>2014-07-11T16:16:42+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/07/11/sorcetree</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>mac環境 ソースツリーを使って 差分ファイル を作成</h2>

<p>まずmacの方は既に素晴らしいサイトを見つけたので下のサイトへ
<a href="https://www.eyemovic.com/blog_it/4747.php">https://www.eyemovic.com/blog_it/4747.php</a></p>

<h2>win環境 ソースツリーを使って 差分ファイル を作成</h2>

<p>下のサイトを参考にバッチファイルを使って、差分ファイルを作成。
<a href="http://stackoverflow.com/questions/21639415/create-archive-of-modified-files-in-git-via-batch-file">http://stackoverflow.com/questions/21639415/create-archive-of-modified-files-in-git-via-batch-file</a></p>

<p>・急ぎ追記:一部の差分がとれない不安定な動作を発見したため、参考程度に見てください。
現在原因、調査中</p>

<h2>差分ファイル作成バッチを作成</h2>

<h3>1 以下の内容を記入した .batファイル を作成</h3>

<p>ファイル名、ディレクトリは好みで。
自分の場合、以下で作成</p>

<p>C:\Users\sawasawato\source_tree_difference.bat</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>setlocal enabledelayedexpansion
</span><span class='line'>set output=
</span><span class='line'>for /f "delims=" %%a in ('git diff --name-only %1^^') do ( set output=!output! "%%a" )
</span><span class='line'>git archive -o update.zip HEAD %output%
</span><span class='line'>endlocal</span></code></pre></td></tr></table></div></figure>


<h3>2 SourceTree(ソースツリー) でカスタム設定する</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ソースツリーを立ち上げ、左上の メニュー
</span><span class='line'>ツール &gt; オプション &gt; カスタム操作</span></code></pre></td></tr></table></div></figure>


<ul>
<li>メニュー表示名  ポップアップメニューで表示させる名前の選択。今回「差分ファイル作成」とする。</li>
<li>実行するスクリプト  先ほど作成したバッチファイルを選択する。</li>
<li>パラメータは無視</li>
</ul>


<p>確か少し前 macでしかカスタム操作ができなかったと思うけど
アップデートで Win でもできるようになった模様。</p>

<p>◆ここから上で紹介したマックとの操作が異なる</p>

<h3>3 差分を出したいリビジョンまで戻す。</h3>

<p>ソースツリーログリスト画面で、差分が欲しいところで右クリック</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>「現在のブランチをこのコミットまでリセット」</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>で戻す。使うモードは Mixed</p>

<h3>4 いよいよ差分をだす。</h3>

<p>3と同様、リスト(どこでもいい)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>右クリック &gt; カスタムオプション &gt; 差分ファイル作成</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>.gitのあるディレクトリに差分ファイル</p>

<p><strong>update.zip</strong></p>

<p>が作成される。</p>

<h3>5 戻す</h3>

<p>4と同様、最後は現状のリビジョンに戻す。</p>

<p>grunt watchとか立ち上げてると移動時、勝手に走ってしまうので
止めてから行いましょう。</p>

<h2>そもそもgitとは？</h2>

<p><a href="https://docs.google.com/presentation/d/19d-faZoJcecBGZmzxYoFJt0P8d6_YUV5hefePVJLQpo/edit#slide=id.gae738927_0107">https://docs.google.com/presentation/d/19d-faZoJcecBGZmzxYoFJt0P8d6_YUV5hefePVJLQpo/edit#slide=id.gae738927_0107</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[外付け HDD フォーマット Win Mac 兼用 exFAT]]></title>
    <link href="http://sawasawato.github.io/blog/2014/07/05/exfat/"/>
    <updated>2014-07-05T21:51:45+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/07/05/exfat</id>
    <content type="html"><![CDATA[<h2>外付けHDD をWinでもMacでも使えるように設定する</h2>

<!-- more -->


<p>外付け HDD はフォーマット(初期化)しないと使えない。<br/>
フォーマット形式によって、外付けハードディスクは Mac と Win で兼用できない。<br/>
Windowsの「NTFSフォーマット」はOS Xでは読み取り専用でしか触れない。<br/>
Macの「HFS+ドライブはWindowsコンピュータでは読む込むこともできない。</p>

<h2>両方のOSで管理したい時には 「exFAT」 が良い。</h2>

<p>exFATは最近のMac（Leopardでは不可）、Windowsマシンの両方で読み込み・書き込みが可能なファイルシステム<br/>
Windowsでドライブをフォーマットする。mac(OS-X)ではクロスプラットフォームで使用できない。</p>

<h3>手順</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Windows ボタン → コンピュータ
</span><span class='line'>外付けHDD (下の方) を右クリックして、メニューから 「フォーマット」を選択
</span><span class='line'>ファイルシステム欄で「exFAT」を選択
</span><span class='line'>アロケーションユニットは触らない (任意好みで)
</span><span class='line'>ボリュームラベル を任意の名前に編集
</span><span class='line'>クイックフォーマット のチェックを外す
</span><span class='line'>実行</span></code></pre></td></tr></table></div></figure>


<h3>容量が 200MB 〜 1GB しか認識されない。</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Windows ボタン → コンピュータを右クリック 「管理」をクリック
</span><span class='line'>記憶域 &gt; ディスクの管理 &gt; フォーマットしたいHDD を 右クリック 「ボリュームの削除」
</span><span class='line'>下の部分に 「未割り当て」 右クリック 「新しいシンプルボリューム」 クリック
</span><span class='line'>ウィザードが立ち上がるので、指示にしたがう。</span></code></pre></td></tr></table></div></figure>


<h3>補足</h3>

<h4>アロケーションユニットサイズとは?</h4>

<ul>
<li>クラスタのサイズの事</li>
<li>クラスタ === ディスクを管理する際の基本の単位</li>
<li>1クラスタ == 4KBでフォーマットされているディスクにわずか1バイトのファイルを保存しても、4KBが使われる。）</li>
<li>残りの使われていない無駄領域を「クラスタギャップ」という</li>
<li>サイズを小さくする：クラスタギャップは少なくなるが、総クラスタ数が多くなって若干アクセスが遅くなる。</li>
<li>サイズを大きくする：比較的小さなサイズのファイルが多い時には、クラスタギャップが多くなる。</li>
<li>書き込み速度の違いは、主にファイルの上書きで発生</li>
</ul>


<p>まとめ
高くすると転送速度が早くなるけど、使用しない無駄な領域ができる。（クラスタギャップ）
低くすると転送速度は遅くなるけど、無駄な領域が減る。</p>

<p>注意
※フォーマットするとハードディスク内のデータは削除される。
  必要なデータは必ずバックアップしておくこと。
※フォーマット後に容量が 200MB〜1GBしか認識されない場合は再度フォーマットをする。</p>

<p>まとめ リンク<br/>
exfat形式の説明など<br/>
<a href="http://www.lifehacker.jp/2012/07/120730exfatfile.html">http://www.lifehacker.jp/2012/07/120730exfatfile.html</a></p>

<p>Mac フォーマット方法<br/>
<a href="http://toneliko.com/561/">http://toneliko.com/561/</a></p>

<p>exfat 形式でファーマットする方法<br/>
<a href="http://jmatsuzaki.com/archives/11064">http://jmatsuzaki.com/archives/11064</a></p>

<p>アロケーションのユニットサイズとは？<br/>
<a href="http://pcnomori.blog.fc2.com/blog-entry-82.html">http://pcnomori.blog.fc2.com/blog-entry-82.html</a> <br/>
<a href="http://okwave.jp/qa/q679423.html">http://okwave.jp/qa/q679423.html</a></p>

<p>アロケーションユニットサイズのベンチマーク (古い)<br/>
<a href="http://freesoft.tvbok.com/tips/hddssd_tips/exfat-usb.html">http://freesoft.tvbok.com/tips/hddssd_tips/exfat-usb.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.js まとめ]]></title>
    <link href="http://sawasawato.github.io/blog/2014/07/04/nodematome/"/>
    <updated>2014-07-04T19:46:07+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/07/04/nodematome</id>
    <content type="html"><![CDATA[<h2>Node.jsの 概要 特徴 導入方法 などさっくりと備忘録かねて紹介</h2>

<!-- more -->


<p>間違ったことを言ってるかもなのであまり宛にしないように。</p>

<h3>使用環境</h3>

<p>使用環境 Win-7 Professional mac-OSX
天命で Windows しばりで Node.js を触らないといけない人の手助けになればよいな。</p>

<h2>目次</h2>

<ul>
<li>Node.js導入について</li>
<li>nvmでNode.js管理する</li>
<li>npmでNode.js管理する</li>
<li>npmコマンド</li>
<li>nvmコマンド</li>
<li>win環境 Node.js を nvm で管理する</li>
<li>mac環境 Node.js を nvm で管理する</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress git で記事を作成する]]></title>
    <link href="http://sawasawato.github.io/blog/2014/06/13/"/>
    <updated>2014-06-13T12:57:58+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/06/</id>
    <content type="html"><![CDATA[<h2>github octopress 記事投稿</h2>

<!-- more -->


<p>久しぶりに記事を投稿しようと思ったら、どうやって書くんやっけ？
と迷ってしまったので、再度備忘録を記述</p>

<h2>記事のファイルを生成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post['title']</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ファイルはsource/_posts/に生成される。</li>
<li>new_samp とするとsampディレクトリに作成される</li>
<li>titleに日本語をそのまま使用するとはできない。</li>
<li>英語で書いた後に日本語に変換する。</li>
<li>手動でファイルを作成しても良い。</li>
</ul>


<h2>生成されたファイルを編集する</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: "title"
</span><span class='line'>date: 2014-07-07 17:17
</span><span class='line'>comments: true
</span><span class='line'>categories: tanabata
</span><span class='line'>---</span></code></pre></td></tr></table></div></figure>


<ul>
<li>layout: 使用するレイアウトを選択する。わからない時は触らない</li>
<li>title: 記事のタイトル URL とは関係ない</li>
<li>date: 記事の作成時刻</li>
<li>comments: コメントを許可するかどうかの設定</li>
<li>categories: カテゴリを設定します。カテゴリは複数入力することが可能</li>
<li>author: 複数人でブログを運営する場合には、この項目で著者の変更</li>
<li>published: 記事が下書きの状態の場合、この項目を <code>false</code> にすることで記事を非公開にする</li>
<li>external-url: URL を設定することで投稿タイトルから直接外部サイトにリンク</li>
</ul>


<h2>記事をプレビューする</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>デフォルトだとブラウザに以下のパスを入力すると見れる</p>

<p><a href="http://localhost:4000/">http://localhost:4000/</a></p>

<h2>記事を作成する(コンパイルする)</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate</span></code></pre></td></tr></table></div></figure>


<h2>Github Pagesに投稿する</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<h1>合わせて覚えると便利な octopress 投稿コマンド</h1>

<h3>octopress 複数カテゴリー 記述方法</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// exsample1
</span><span class='line'>categories: [jQuery, Pjax, History API]
</span><span class='line'>
</span><span class='line'>// exsample2
</span><span class='line'>categories:
</span><span class='line'>- jQuery
</span><span class='line'>- Pjax
</span><span class='line'>- History API</span></code></pre></td></tr></table></div></figure>


<h3>octopress sorce sass だけ監視</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake watch</span></code></pre></td></tr></table></div></figure>


<h3>octopress ページを作成</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_page[sample]</span></code></pre></td></tr></table></div></figure>


<p>ブログ記事でなく、ページとして作成する時は上のコマンドを使用。
パスは以下となる
/source/sample/index.markdown</p>

<p>ディレクトリではなく、HTMLファイルにアクセスさせるようなページを作成する場合には次のようにファイル名まで指定する必要がある</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># creates /source/example/test.markdown
</span><span class='line'>rake new_page[example/test.html]</span></code></pre></td></tr></table></div></figure>


<p>参考サイト
<a href="http://blog.4uing.net/octopress-post/">http://blog.4uing.net/octopress-post/</a></p>

<p>マックで文章書く時に参考にさせてもらったサイト
<a href="http://mattintosh.blog.so-net.ne.jp/2012-07-15_mac_english_katakana_convert">http://mattintosh.blog.so-net.ne.jp/2012-07-15_mac_english_katakana_convert</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress themechange オクトプレスのテーマ 変更]]></title>
    <link href="http://sawasawato.github.io/blog/2014/05/28/octopress-themechange/"/>
    <updated>2014-05-28T23:42:36+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/05/28/octopress-themechange</id>
    <content type="html"><![CDATA[<h2>octopressでテーマを変更する</h2>

<p>octopressのテーマの変更方法と好みにカスタマイズする上で知っておきたいTipsを備忘録がてら記述</p>

<!-- more -->


<p>Octopress のテーマが最近になって転がり始めたけれど、
日本語対応しているものはまだ少なく、細かな詰めをしたいと感じる。</p>

<p>そこでクローンした後にsassを修正する際、genarate deployする時反映されるsassは以下のもの</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/Users/sawamuranaoto/octopress/sass</span></code></pre></td></tr></table></div></figure>


<p>以下のようにクローンする</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git@github.com:bijumon/oct2.git .themes/oct2
</span><span class='line'>bundle exec rake install['oct2']
</span><span class='line'>A theme is already installed, proceeding will overwrite existing files. Are you sure? [y/n]
</span><span class='line'>
</span><span class='line'>bundle exec rake preview</span></code></pre></td></tr></table></div></figure>


<p>テーマをクローンする
rake installをする</p>

<p>theme is already installed
などインストールしてるよとか出てこない。</p>

<p>環境によって
bundle exec が不要でも動く</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim windows 環境設定]]></title>
    <link href="http://sawasawato.github.io/blog/2014/04/10/vim/"/>
    <updated>2014-04-10T13:07:51+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/04/10/vim</id>
    <content type="html"><![CDATA[<h2>windows環境でvimプラグインをneobundle.vimで管理する</h2>

<!-- more -->


<p>Gvim + Windows環境 + neobundle.vim で環境設定<br/>
vim はデフォルトでもかなり強力、プラグイン導入 でより強力になる。もはやエディタの領域を超える。<br/>
プラグイン管理 はもはやデフォルトになってきている気がする NeoBundle を導入する。<br/>
NeoBundle が 動かない で困ったので、Win使用でハマッたこと、解決法も記述。<br/>
git + github が必要、ネットワーク必須だけど、半自動でアップデートができるのが便利すぎる。</p>

<hr />

<h2>GVim のインストール</h2>

<p>KaoriYaバッチ ダウンロード<br/>
<a href="http://www.kaoriya.net/">http://www.kaoriya.net/</a></p>

<p>KaoriYa vimは インストール不要+ディレクトリの制限がないのがとても嬉しい<br/>
ストレージ等から落とせばすぐ使える。</p>

<hr />

<h2>git導入</h2>

<p>gitの導入方法 + github アカウント作成 はこちらの方々を参考に</p>

<p><a href="http://codezine.jp/article/detail/7077">http://codezine.jp/article/detail/7077</a></p>

<p><a href="http://www.backlog.jp/git-guide/">http://www.backlog.jp/git-guide/</a></p>

<p>とりあえずCUIで操作できるように。</p>

<hr />

<h2>環境変数PATHにgitコマンドへのパスを追加</h2>

<p><a href="http://next.matrix.jp/config-path-win7.html">http://next.matrix.jp/config-path-win7.html</a></p>

<h3>環境変数PATHにgitコマンドへのパスを追加</h3>

<h3>環境変数PATHにgitコマンドへのパスを追加</h3>

<h3>環境変数PATHにgitコマンドへのパスを追加</h3>

<p>大事なことなので。。。<br/>
git は cygwin だったり gitbush だけでも使うことはできます。ですが<br/>
NeoBundle コマンドでのインストールは Winの環境PATHの影響をうける<br/>
ので、設定をしないと最後の</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:NeoBundleInstall  </span></code></pre></td></tr></table></div></figure>


<p>コマンドでプラグインインストールができません。</p>

<p>詳細のエラーもはかないので、これでかなりハマりました。。。<br/>
上記のインストールなど不要なのも影響。</p>

<p>とりあえず vim コマンドプロンプト 起動 できても困らないので設定</p>

<p>mac や unix は関係ない。</p>

<hr />

<h2>neobundle のインストール</h2>

<p>$VIM === ~/.vim === vim.exeのあるディレクトリ<br/>
パスが分からない人は :echo $VIM 等で調べてみよう</p>

<p>コマンドプロンプト</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir %userprofile%\.vim\bundle
</span><span class='line'>cd %userprofile%\.vim\bundle
</span><span class='line'>git clone git://github.com/Shougo/neobundle.vim</span></code></pre></td></tr></table></div></figure>


<p>$VIM/_vimrc or に以下を追記</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"-------------------------------------------------------------------------
</span><span class='line'>" MyFavoritePlugin for vim
</span><span class='line'>"---------------------------------------------------------------------------
</span><span class='line'>" neobundle
</span><span class='line'>set nocompatible               " Be iMproved
</span><span class='line'>filetype off                   " Required!
</span><span class='line'>
</span><span class='line'>if has('vim_starting')
</span><span class='line'>  set runtimepath+=$VIM\bundle\neobundle.vim
</span><span class='line'>  call neobundle#rc(expand('$VIM\bundle'))
</span><span class='line'>endif
</span><span class='line'>
</span><span class='line'>" originalrepos on github
</span><span class='line'>NeoBundle 'Shougo/neobundle.vim'
</span><span class='line'>
</span><span class='line'>/*------------------------------
</span><span class='line'>ここ適当に
</span><span class='line'>
</span><span class='line'>NeoBundle 'Shougo/unite.vim'
</span><span class='line'>NeoBundle 'Shougo/vimproc'
</span><span class='line'>NeoBundle 'VimClojure'
</span><span class='line'>NeoBundle 'Shougo/vimshell'
</span><span class='line'>NeoBundle 'Shougo/neocomplcache'
</span><span class='line'>NeoBundle 'Shougo/neosnippet'
</span><span class='line'>NeoBundle 'jpalardy/vim-slime'
</span><span class='line'>NeoBundle 'scrooloose/syntastic'
</span><span class='line'>NeoBundle 'scrooloose/nerdtree' 
</span><span class='line'>
</span><span class='line'>" web屋必須プラグイン
</span><span class='line'>NeoBundle 'mattn/emmet-vim'
</span><span class='line'>NeoBundle 'tpope/vim-surround'
</span><span class='line'>NeoBundle 'open-browser.vim'
</span><span class='line'>NeoBundle 'mattn/webapi-vim'
</span><span class='line'>NeoBundle 'hail2u/vim-css3-syntax'
</span><span class='line'>NeoBundle 'taichouchou2/html5.vim'
</span><span class='line'>NeoBundle 'taichouchou2/vim-javascript'
</span><span class='line'>NeoBundle 'kchmck/vim-coffee-script'
</span><span class='line'>NeoBundle 'Lokaltog/vim-easymotion'
</span><span class='line'>NeoBundle 'tmhedberg/matchit'
</span><span class='line'>NeoBundle 'tell-k/vim-browsereload-mac' MacOnly
</span><span class='line'>
</span><span class='line'>" 補完
</span><span class='line'>NeoBundle 'taichouchou2/vim-rsense'
</span><span class='line'>
</span><span class='line'>"コメント
</span><span class='line'>NeoBundle 'tomtom/tcomment_vim'
</span><span class='line'>NeoBundle 'Shougo/neocomplcache.vim'
</span><span class='line'>
</span><span class='line'>" railsサポート
</span><span class='line'>NeoBundle 'taichouchou2/vim-rails'
</span><span class='line'>NeoBundle 'romanvbabenko/rails.vim'
</span><span class='line'>NeoBundle 'ujihisa/unite-rake'
</span><span class='line'>NeoBundle 'basyura/unite-rails'
</span><span class='line'>
</span><span class='line'>" reference環境
</span><span class='line'>NeoBundle 'thinca/vim-ref'
</span><span class='line'>NeoBundle 'taichouchou2/vim-ref-ri'
</span><span class='line'>NeoBundle 'taq/vim-rspec'
</span><span class='line'>-----------------------------*/
</span><span class='line'>
</span><span class='line'>filetype plugin indent on     " Required!
</span><span class='line'>syntax on
</span><span class='line'>
</span><span class='line'>" Installation check.
</span><span class='line'>if neobundle#exists_not_installed_bundles()
</span><span class='line'>  echomsg 'Not installed bundles : ' .
</span><span class='line'>        \ string(neobundle#get_not_installed_bundle_names())
</span><span class='line'>  echomsg 'Please execute ":NeoBundleInstall" command.'
</span><span class='line'>  "finish
</span><span class='line'>endif</span></code></pre></td></tr></table></div></figure>


<hr />

<p>設定したら _vimrc を再度読み込む。Gvim再起動でも良い。<br/>
後は以下のコマンドで対応</p>

<h2>初回 vim プラグイン インストール</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:NeoBundleInstall</span></code></pre></td></tr></table></div></figure>


<h2>vim プラグイン アップデート</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:NeoBundleInstall!</span></code></pre></td></tr></table></div></figure>


<h2>vim プラグイン クリーン</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:NeoBundleClean</span></code></pre></td></tr></table></div></figure>


<h2>参考にさせていただいた偉人の方々 -SpecialThanks-</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sass]]></title>
    <link href="http://sawasawato.github.io/blog/2014/02/14/sass/"/>
    <updated>2014-02-14T16:19:42+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/02/14/sass</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHubでブログの作成 - markdown markup 違い-]]></title>
    <link href="http://sawasawato.github.io/blog/2014/01/28/markdown/"/>
    <updated>2014-01-28T23:11:39+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/01/28/markdown</id>
    <content type="html"><![CDATA[<h2>github octopress Markdown</h2>

<!-- more -->


<p>GitもRubyもやったことない人間が興味本位でOctopressを始めようとしたので、<br/>
驚く位ブログを立ち上げるだけで時間をとられてしまった。<br/>
後で、導入方法を記述する予定。<br/>
Octopress で記事を作成するには Markdown なる記述方法が必要とのこと。<br/>
Markup(HTML)は書いているのである程度わかるものの、知らなかったので調べてみたことを備忘録がてら記述。</p>

<h2>Markdownとは？自分解釈</h2>

<ul>
<li>軽量マークアップ言語 (結局はマークアップ言語のHTMLに直す)</li>
<li>簡単</li>
<li>少ないテキストでマークアップできる</li>
<li>class id をつけられない === 結局HTML使うらしい。</li>
</ul>


<h2>Markdown Markup 違い</h2>

<ul>
<li>Markup &hellip; &lt;タグ>sample&lt;/タグ></li>
<li>Markdown &hellip; #記号 #h1見出し ##h2見出し 以降記号と表現する。</li>
</ul>


<p>お固い解釈など興味のある方は
本家へ <a href="http://daringfireball.net/projects/markdown/">http://daringfireball.net/projects/markdown/</a></p>

<hr />

<h2>見出し #h1〜h6</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 見出しh1
</span><span class='line'>## 見出し h2
</span><span class='line'>### 見出し h3
</span><span class='line'>#### 見出し h4
</span><span class='line'>##### 見出し h5
</span><span class='line'>###### 見出し h6</span></code></pre></td></tr></table></div></figure>


<h1>見出し h1</h1>

<h2>見出し h2</h2>

<h3>見出し h3</h3>

<h4>見出し h4</h4>

<h5>見出し h5</h5>

<h6>見出し h6</h6>

<hr />

<h2>見出しの別の書き方</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Title1 の下に=
</span><span class='line'>=
</span><span class='line'>Title2 の下に-
</span><span class='line'>-</span></code></pre></td></tr></table></div></figure>


<h1>Title1 の下に=</h1>

<h2>Title2 の下に-</h2>

<hr />

<h2>段落 p</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>段落を分けるには改行の後に
</span><span class='line'>
</span><span class='line'>空白を入れるだけ。
</span></code></pre></td></tr></table></div></figure>


<p>改行するには改行の後に</p>

<p>空白を入れるだけ。</p>

<hr />

<h2>改行 br</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>複数行で改行を入れたい場合は、  
</span><span class='line'>改行の後に半角スペース2回以上入れる。  
</span><span class='line'>改行するだけでは、
</span><span class='line'>改行されないので</span></code></pre></td></tr></table></div></figure>


<p>複数行で改行を入れたい場合は、<br/>
改行の後に半角スペース2回以上入れる。<br/>
改行するだけでは、
改行されないので</p>

<hr />

<h2>強調 em strong</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>強調を示す場合は*(アスタリスク) で囲むか  
</span><span class='line'>_(アンダースコア) で囲む  
</span><span class='line'>*em* は＊か＿で一つ囲む  
</span><span class='line'>__strongは__ ＊か＿で二つ囲む</span></code></pre></td></tr></table></div></figure>


<p>強調を示す場合は*(アスタリスク) で囲むか<br/>
_(アンダースコア) で囲む<br/>
<strong>em</strong> は＊か＿で一つ囲む<br/>
<strong>strong</strong> は ＊か＿で二つ囲む</p>

<hr />

<h2>引用 bvockquote</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; 引用な文章です。
</span><span class='line'>&gt; &gt; 入れ子にすることもできる。</span></code></pre></td></tr></table></div></figure>


<blockquote><p>引用な文章です。</p>

<blockquote><p>入れ子にすることもできる。</p></blockquote></blockquote>

<hr />

<h2>リスト番号なし ul > li</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>リストを示すには*(アスタリスク),-(ハイフン),+(プラス)のどれかを入力し、スペースまたはタブで挿入する。
</span><span class='line'>* 上下に空白を一つ入れよう
</span><span class='line'>+ 記号の前に空白をつけると見れなくなるよ
</span><span class='line'>- 記号の後に入れるスペースをお忘れなく</span></code></pre></td></tr></table></div></figure>


<p>リストを示すには*(アスタリスク),&ndash;(ハイフン),+(プラス)のどれかを入力し、スペースまたはタブで挿入する。</p>

<ul>
<li>上下に空白を一つ入れよう</li>
<li>記号の前に空白をつけると見れなくなるよ</li>
<li>記号の後に入れるスペースをお忘れなく</li>
</ul>


<hr />

<h2>リスト番号あり ol > li</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. item1 数字は適当でも
</span><span class='line'>3. item3 順番に表示
</span><span class='line'>2. item2 されるよ!
</span><span class='line'>2. item4 便利だね。</span></code></pre></td></tr></table></div></figure>


<ol>
<li>item1 数字は適当でも</li>
<li>item3 順番に表示</li>
<li>item2 されるよ!</li>
<li>item4 便利だね。</li>
</ol>


<hr />

<h2>リンクを書く</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>自動リンク http://sawasawato.github.io/
</span><span class='line'>
</span><span class='line'>[インラインリンク](http://sawasawato.github.io/)
</span><span class='line'>
</span><span class='line'>[外部参照リンク][1]
</span><span class='line'>
</span><span class='line'>[1]:http://sawasawato.github.io/ "Title属性もつけれるよ"</span></code></pre></td></tr></table></div></figure>


<p>自動リンク <a href="http://sawasawato.github.io/">http://sawasawato.github.io/</a></p>

<p><a href="http://sawasawato.github.io/">インラインリンク</a></p>

<p><a href="pass/sawasawato.img">外部参照リンク</a></p>

<hr />

<h2>画像を読み込む img</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>![Altタグだよ](pass/sawasawato.img)
</span><span class='line'>
</span><span class='line'>![Altタグだよ][1]
</span><span class='line'>
</span><span class='line'>[1]:pass/sawasawato.img
</span><span class='line'>
</span><span class='line'>[![画像にリンクをはるよ](pass/sawasawato.img)](http://sawasawato.github.io/)
</span></code></pre></td></tr></table></div></figure>


<p><img src="pass/sawasawato.img" alt="Altタグだよ" /></p>

<p><img src="pass/sawasawato.img" alt="Altタグだよ" /></p>

<p><a href="http://sawasawato.github.io/"><img src="pass/sawasawato.img" alt="画像にリンクをはるよ" /></a></p>

<hr />

<h2>コードブロックを書く1 pre > code</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>コードブロックの書き方
</span><span class='line'>  スペースを4つつける?   
</span><span class='line'>  自分の環境だとタブ一つできく</span></code></pre></td></tr></table></div></figure>


<pre><code>コードブロックの書き方
スペースを4つつける?   
自分の環境だとタブ一つできく
</code></pre>

<hr />

<h2>コードブロックを書く2 pre (このブログは設定変更中)</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> ```
</span><span class='line'>コードを書くときなど、&lt;S+@&gt;の`(バッククオート)
</span><span class='line'>をつなげた`で文章を囲む。  
</span><span class='line'>`は二つつなげると"と判断されるよう。この機能じゃまだな。。。
</span><span class='line'> ```</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>水平線 hr</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-を3つつなげる
</span><span class='line'> ---
</span><span class='line'>*を3つつなげる
</span><span class='line'> ***
</span></code></pre></td></tr></table></div></figure>


<p> -を3つつなげる</p>

<hr />

<p> *を3つつなげる</p>

<hr />

<h2>マークダウン記号をエスケープさせる</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/#</span></code></pre></td></tr></table></div></figure>


<p>/#</p>

<hr />

<h2>こういう時は素直にマークアップを使おう</h2>

<ul>
<li>リンクを<em>ターゲットブランク</em>にしたい</li>
<li>タグにクラスやIDをつけたい</li>
<li>ここで紹介された以外のHTMLタグを使いたい</li>
</ul>


<h2>感想</h2>

<p>細かな設定は結局 HTML になるものの、新しい面白い技術。<br/>
vim + Zencoding = Emmet を積んでカスタマイズしても、Markdownの方が、早く書くことができる。<br/>
でも画像の入力が手間+属性をつけられないので、画像の管理が面倒<br/>
画像はローカルじゃなくてクラウドで管理してる人が多いみたい<br/>
あくまでテキストベースなので、float 使ったカラムの変更とかは向かないのがなんかもったいない。<br/>
割とvimとは相性が良くない方かもだけど、vimrcにスにペッドを書いてもよさそう。<br/>
とりあえず、スペースの可視化は必須かな</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set list
</span><span class='line'>set listchars=tab:&gt;-,extends:&lt;,trail:-,eol:&lt;</span></code></pre></td></tr></table></div></figure>


<p>細かなvimrcの設定が気になる方はこの方を参考に<br/>
<a href="http://blog.remora.cx/2011/08/display-invisible-characters-on-vim.html">http://blog.remora.cx/2011/08/display-invisible-characters-on-vim.html</a></p>

<p>なんか悔しいけどwこれはEmaxの方が書きやすいかも</p>

<hr />

<h2>参考にさせていただいた偉人の方々 -SpecialThanks-</h2>

<p>ドットインストール 田口さんは偉大w<br/>
<a href="http://dotinstall.com/lessons/basic_markdown">http://dotinstall.com/lessons/basic_markdown</a></p>

<p>Milk+eaさん<br/>
<a href="http://totora0155.hatenablog.jp/entry/2013/03/11/220213">http://totora0155.hatenablog.jp/entry/2013/03/11/220213</a></p>

<p>mimemoさん<br/>
<a href="http://www.miukoba.net/blog/2013/01/05/start-octopress/">http://www.miukoba.net/blog/2013/01/05/start-octopress/</a></p>

<p>ゆっくりとさん<br/>
<a href="http://tokkono.cute.coocan.jp/blog/slow/index.php/programming/markdown-skills-for-github-beginners/">http://tokkono.cute.coocan.jp/blog/slow/index.php/programming/markdown-skills-for-github-beginners/</a></p>

<p>こじかさん いつも勉強させていただいてます<br/>
<a href="http://kojika17.com/2013/01/starting-markdown.html">http://kojika17.com/2013/01/starting-markdown.html</a></p>
]]></content>
  </entry>
  
</feed>
