<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Node.js | Sawasawato Web Hack Blog]]></title>
  <link href="http://sawasawato.github.io/blog/categories/node-dot-js/atom.xml" rel="self"/>
  <link href="http://sawasawato.github.io/"/>
  <updated>2015-01-23T17:09:25+09:00</updated>
  <id>http://sawasawato.github.io/</id>
  <author>
    <name><![CDATA[Sawasawato]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[初めての Grunt 導入方法]]></title>
    <link href="http://sawasawato.github.io/blog/2014/07/11/grunt/"/>
    <updated>2014-07-11T21:26:46+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/07/11/grunt</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Grunt 概要</h2>

<ul>
<li>・Node.jsを使用したCUIのビルドツール(黒い画面)</li>
<li>・sass や coffee のコンパイル等毎回する作業を自動でやってくれる</li>
<li>・ローカルサーバーとかも立ち上げてくれる</li>
<li>・JavaScript で自動化するタスクを設定する</li>
</ul>


<p>コジカさんがわかりやすいです。<br/>
<a href="http://kojika17.com/2013/03/grunt.js-memo.html">http://kojika17.com/2013/03/grunt.js-memo.html</a></p>

<h2>gitの準備</h2>

<p>まずgitを使えるようにしておくこと。</p>

<h2>Node.jsの準備</h2>

<p>Node.js を nvm (Node Version Manager)でバージョン管理できる形で導入する。
バージョンによって、使えないプラグインがある + バージョン変更が面倒なので入れたほうが良い。
npmはnvmを入れれば勝手に入ってくる</p>

<p>nvm Node.jsのバージョン管理 コマンドでバージョン変更できる
npm Node.jsで使用するモジュール管理 コマンドでインストールアンインストールできる</p>

<p>導入が終わったら、Grunt導入</p>

<h2>Gruntのインストール</h2>

<h3>Gruntを動かすコマンドのインストール</h3>

<p>コマンドプロンプトか、ターミナルを立ち上げて以下を入力
<code>
nvmw use v0.10.26 //使用するバージョン選択
npm install -g grunt-cli //どこでも使えるように -g パラメータを付ける
</code>
grunt-cli は gruntを実行するためのコマンドリストの意味
たからgruntをいれてもこれを入れないと動かない</p>

<p><code>
grunt -version
grunt-cli v0.1.13
</code>
とか出ていれば OK</p>

<h3>Gruntを使ってみる</h3>

<p>1 作業ディレクトリを作成して、移動する。
<code>
mkdir samplepath/gruntsample
cd samplepath/gruntsample
</code>
GUIで作って移動するでも、もちろん良い。</p>

<p>2 設定ファイル「package.json」ファイル作成
<code>
npm init //対話が終わると package.json が生成される
</code>
ウィザードが色々聞いてくれるのでそれに応えて設定ファイルを作成</p>

<pre><code>package.jsonとは？
Node.jsが依存ライブラリなどの環境情報を管理するための設定ファイル
</code></pre>

<p>3 gruntモジュールインストール
プロジェクト毎にバージョンが違うこともあるので、gruntモジュールは個別にインストール
<code>
npm install grunt --save-dev
</code>
save-devオプションを付けると、package.json の
「devDependencies」プロパティに
モジュール名:バージョン
を自動追記してくれる</p>

<p>4 Gruntfile.jsファイルの作成
package.jsonと同じ階層に Gruntfile.js を作成
以下の内容を記述して、Gruntのタスクの設定する
```
module.exports = function(grunt) {
  //Gruntの設定
  grunt.initConfig({</p>

<pre><code>pkg: grunt.file.readJSON('package.json')
</code></pre>

<p>  });
  //defaultタスクの定義
  grunt.registerTask(&lsquo;default&rsquo;, &lsquo;Log some stuff.&rsquo;, function() {</p>

<pre><code>//ログメッセージの出力
grunt.log.write('Logging some stuff...').ok();
</code></pre>

<p>  });
};
<code>
コマンドラインで以下を入力してタスクを実行
</code>
grunt
```
gruntのみで動くのはderaultタスクが実行される
実行コマンドと走らせるタスクはもちろん自分で設定できる。</p>

<h2>参考サイト</h2>

<p><a href="http://www.atmarkit.co.jp/ait/articles/1403/04/news020.html">http://www.atmarkit.co.jp/ait/articles/1403/04/news020.html</a>
<a href="http://kojika17.com/2013/03/grunt.js-memo.html">http://kojika17.com/2013/03/grunt.js-memo.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.js まとめ]]></title>
    <link href="http://sawasawato.github.io/blog/2014/07/04/nodematome/"/>
    <updated>2014-07-04T19:46:07+09:00</updated>
    <id>http://sawasawato.github.io/blog/2014/07/04/nodematome</id>
    <content type="html"><![CDATA[<h2>Node.jsの 概要 特徴 導入方法 などさっくりと備忘録かねて紹介</h2>

<!-- more -->


<p>間違ったことを言ってるかもなのであまり宛にしないように。</p>

<h3>使用環境</h3>

<p>使用環境 Win-7 Professional mac-OSX
天命で Windows しばりで Node.js を触らないといけない人の手助けになればよいな。</p>

<h2>目次</h2>

<ul>
<li>Node.js導入について</li>
<li>nvmでNode.js管理する</li>
<li>npmでNode.js管理する</li>
<li>npmコマンド</li>
<li>nvmコマンド</li>
<li>win環境 Node.js を nvm で管理する</li>
<li>mac環境 Node.js を nvm で管理する</li>
</ul>

]]></content>
  </entry>
  
</feed>
